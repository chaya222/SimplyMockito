package com.poonam.simplymockito.feature.profileimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport com.poonam.simplymockito.feature.data.GitUserProfileResponseimport com.poonam.simplymockito.feature.repo.GitRepoimport com.poonam.simplymockito.utils.LiveDataResultimport io.reactivex.Observerimport io.reactivex.disposables.Disposableimport javax.inject.Injectclass ProfileViewModel @Inject constructor(val gitRepo: GitRepo) : ViewModel() {    val profile = MutableLiveData<LiveDataResult<GitUserProfileResponse>>()    fun getGitProfile(userName: String) {        gitRepo.getGitProfile(userName)!!.subscribe(GetUserProfile())    }    inner class GetUserProfile : Observer<GitUserProfileResponse> {        override fun onNext(t: GitUserProfileResponse) {            profile.postValue(LiveDataResult.success(t))        }        override fun onComplete() {        }        override fun onSubscribe(d: Disposable) {            profile.postValue(LiveDataResult.loading())        }        override fun onError(e: Throwable) {            profile.postValue(LiveDataResult.error(e))        }    }}